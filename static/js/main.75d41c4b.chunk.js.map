{"version":3,"sources":["components/NavigationBar.js","components/Welcome.js","components/MyToast.js","components/Record.js","components/DetailView.js","components/RecordList.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","Navbar","bg","variant","to","className","Brand","href","Nav","React","Component","Welcome","Jumbotron","MyToast","style","this","props","show","position","top","right","zIndex","boxShadow","Toast","type","Header","closeButton","Body","message","Record","initialState","id","nameBuilding","roomNumber","personResponsible","numberOfSeat","typeRoom","numberOfComputer","numberOfBoard","numberOfMultimediaProjectors","formGridNumberOfTraditionalProjectors","authorizeToBook","referenceCode","cardCode","responseUnit","comments","findRecordById","axios","get","then","response","console","log","data","setState","numberOfTraditionalProjectors","catch","error","resetRecord","submitRecord","event","preventDefault","record","state","post","setTimeout","updateRecord","put","recordList","recordChange","target","name","value","history","push","bind","match","params","method","Card","icon","faEdit","faPlusSquare","Form","onReset","onSubmit","Row","Group","as","Col","controlId","Label","Control","required","autoComplete","onChange","placeholder","Footer","Button","size","faSave","faUndo","onClick","faList","DetailView","faEye","readOnly","RecordList","deleteRecord","recordId","delete","records","filter","findAllRecords","Table","float","left","striped","bordered","hover","align","colSpan","length","map","key","ButtonGroup","faTrash","fullYear","Date","getFullYear","fixed","Container","lg","App","marginTop","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75d41c4b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass NavigationBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Link to={\"\"} className=\"navbar-brand\">\r\n                    <Navbar.Brand href=\"/\">Ewidencja sal</Navbar.Brand>\r\n                </Link>\r\n                <Nav className=\"mr-auto\">\r\n                    <Link to={\"add\"} className=\"nav-link\">Dodaj salę</Link>\r\n                    <Link to={\"list\"} className=\"nav-link\">Lista sal</Link>\r\n                </Nav>\r\n            </Navbar>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default NavigationBar;\r\n","import React from 'react';\r\nimport {Jumbotron} from 'react-bootstrap';\r\n\r\nclass Welcome extends React.Component {\r\n    render() {\r\n        return (\r\n            <Jumbotron className=\"bg-dark text-white\">\r\n                <h1>Witam w ewidencji</h1>\r\n                <blockquote className=\"blockquote mb-0\">\r\n                    <p>\r\n                        Ewidencja sal dydaktycznych Politechniki Warszawskiej\r\n                    </p>\r\n                    <footer className=\"blockquote-footer\"></footer>\r\n                </blockquote>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Welcome;\r\n","import React, {Component} from 'react';\r\nimport {Toast} from 'react-bootstrap';\r\n\r\nexport default class MyToast extends Component {\r\n    render() {\r\n        const toastCss = {\r\n            position: 'fixed',\r\n            top: '10px',\r\n            right: '10px',\r\n            zIndex: '1',\r\n            boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\r\n        };\r\n\r\n        return (\r\n            <div style={this.props.show ? toastCss : null}>\r\n                <Toast\r\n                    className={`border text-white ${this.props.type === \"success\" ? \"border-success bg-success\" : \"border-danger bg-danger\"}`}\r\n                    show={this.props.show}>\r\n                    <Toast.Header className={`text-white ${this.props.type === \"success\" ? \"bg-success\" : \"bg-danger\"}`}\r\n                                  closeButton={false}>\r\n                        <strong className=\"mr-auto\">Success</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>\r\n                        {this.props.message}\r\n                    </Toast.Body>\r\n                </Toast>\r\n            </div>\r\n        );\r\n\r\n    };\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Card, Form, Button, Col} from 'react-bootstrap';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faPlusSquare, faSave, faUndo, faList, faEdit} from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios';\r\nimport MyToast from './MyToast';\r\n\r\nexport default class Record extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.state.show = false;\r\n        this.recordChange = this.recordChange.bind(this);\r\n        this.submitRecord = this.submitRecord.bind(this);\r\n    };\r\n\r\n    initialState = {\r\n        id: '',\r\n        nameBuilding: '',\r\n        roomNumber: '',\r\n        personResponsible: '',\r\n        numberOfSeat: '',\r\n        typeRoom: '',\r\n        numberOfComputer: '',\r\n        numberOfBoard: '',\r\n        numberOfMultimediaProjectors: '',\r\n        formGridNumberOfTraditionalProjectors: '',\r\n        authorizeToBook: '',\r\n        referenceCode: '',\r\n        cardCode: '',\r\n        responseUnit: '',\r\n        comments: ''\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        const id = this.props.match.params.id;\r\n        console.log(id);\r\n        console.log(this.props.match.params);\r\n        if (id) {\r\n            this.findRecordById(id);\r\n        }\r\n    }\r\n\r\n    findRecordById = (id) => {\r\n        axios.get(\" https://creepy-spell-42189.herokuapp.com/record/\" + id)\r\n            .then(response => {\r\n                console.log(response);\r\n                console.log(response.data);\r\n                if (response.data != null) {\r\n                    this.setState({\r\n                        id: response.data.id,\r\n                        nameBuilding: response.data.nameBuilding,\r\n                        roomNumber: response.data.roomNumber,\r\n                        personResponsible: response.data.personResponsible,\r\n                        numberOfSeat: response.data.numberOfSeat,\r\n                        typeRoom: response.data.typeRoom,\r\n                        numberOfComputer: response.data.numberOfComputer,\r\n                        numberOfBoard: response.data.numberOfBoard,\r\n                        numberOfMultimediaProjectors: response.data.numberOfMultimediaProjectors,\r\n                        numberOfTraditionalProjectors: response.data.numberOfTraditionalProjectors,\r\n                        authorizeToBook: response.data.authorizeToBook,\r\n                        referenceCode: response.data.referenceCode,\r\n                        cardCode: response.data.cardCode,\r\n                        responseUnit: response.data.responseUnit,\r\n                        comments: response.data.comments\r\n                    });\r\n\r\n\r\n                }\r\n\r\n            }).catch((error) => {\r\n            console.error(\"Error -\" + error);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    resetRecord = () => {\r\n        this.setState(() => this.initialState);\r\n    };\r\n\r\n    submitRecord = event => {\r\n        event.preventDefault();\r\n\r\n        const record = {\r\n            nameBuilding: this.state.nameBuilding,\r\n            roomNumber: this.state.roomNumber,\r\n            personResponsible: this.state.personResponsible,\r\n            numberOfSeat: this.state.numberOfSeat,\r\n            typeRoom: this.state.typeRoom,\r\n            numberOfComputer: this.state.numberOfComputer,\r\n            numberOfBoard: this.state.numberOfBoard,\r\n            numberOfMultimediaProjectors: this.state.numberOfMultimediaProjectors,\r\n            numberOfTraditionalProjectors: this.state.numberOfTraditionalProjectors,\r\n            authorizeToBook: this.state.authorizeToBook,\r\n            referenceCode: this.state.referenceCode,\r\n            cardCode: this.state.cardCode,\r\n            responseUnit: this.state.responseUnit,\r\n            comments: this.state.comments\r\n        };\r\n\r\n\r\n        axios.post(\" https://creepy-spell-42189.herokuapp.com/record/add\", record)\r\n            .then(response => {\r\n                if (response.data != null) {\r\n                    this.setState({\"show\": true, \"method\": \"post\"});\r\n                    setTimeout(() => this.setState({\"show\": false}), 3000)\r\n                } else {\r\n                    this.setState({\"show\": false});\r\n                }\r\n            });\r\n        this.setState(this.initialState);\r\n    };\r\n\r\n    updateRecord = event => {\r\n        event.preventDefault();\r\n\r\n        const record = {\r\n            id: this.state.id,\r\n            nameBuilding: this.state.nameBuilding,\r\n            roomNumber: this.state.roomNumber,\r\n            personResponsible: this.state.personResponsible,\r\n            numberOfSeat: this.state.numberOfSeat,\r\n            typeRoom: this.state.typeRoom,\r\n            numberOfComputer: this.state.numberOfComputer,\r\n            numberOfBoard: this.state.numberOfBoard,\r\n            numberOfMultimediaProjectors: this.state.numberOfMultimediaProjectors,\r\n            numberOfTraditionalProjectors: this.state.numberOfTraditionalProjectors,\r\n            authorizeToBook: this.state.authorizeToBook,\r\n            referenceCode: this.state.referenceCode,\r\n            cardCode: this.state.cardCode,\r\n            responseUnit: this.state.responseUnit,\r\n            comments: this.state.comments\r\n        };\r\n\r\n\r\n        axios.put(\" https://creepy-spell-42189.herokuapp.com/record/update\", record)\r\n            .then(response => {\r\n                if (response.data != null) {\r\n                    this.setState({\"show\": true, \"method\": \"put\"});\r\n                    setTimeout(() => this.setState({\"show\": false}), 3000);\r\n                    setTimeout(() => this.recordList(), 3000);\r\n                } else {\r\n                    this.setState({\"show\": false});\r\n                }\r\n            });\r\n        this.setState(this.initialState);\r\n\r\n    };\r\n\r\n\r\n    recordChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    recordList = () => {\r\n        return this.props.history.push(\"/list\")\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            nameBuilding, roomNumber, personResponsible, numberOfSeat, typeRoom,\r\n            numberOfComputer, numberOfBoard, numberOfMultimediaProjectors,\r\n            numberOfTraditionalProjectors, authorizeToBook, referenceCode,\r\n            cardCode, responseUnit, comments\r\n        } = this.state;\r\n        return (\r\n            <div>\r\n                <div style={{\"display\": this.state.show ? \"block\" : \"none\"}}>\r\n                    <MyToast show={this.state.show}\r\n                             message={this.state.method === \"put\" ? \"Sala została uaktualniona.\" : \"Sala została zapisana.\"}\r\n                             type={\"success\"}/>\r\n                </div>\r\n                <Card className={\"border border-dark bg-dark text-white\"}>\r\n                    <Card.Header> <FontAwesomeIcon\r\n                        icon={this.state.id ? faEdit : faPlusSquare}/>{this.state.id ? \" Zmień\" : \" Dodaj salę\"}\r\n                    </Card.Header>\r\n                    <Form onReset={this.resetRecord} onSubmit={this.state.id ? this.updateRecord : this.submitRecord}\r\n                          id=\"recordFormId\">\r\n                        <Card.Body>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridNameBuilding\">\r\n                                    <Form.Label>Budynek</Form.Label>\r\n                                    <Form.Control required autoComplete=\"off\"\r\n                                                  type=\"text\" name=\"nameBuilding\"\r\n                                                  value={nameBuilding} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  placeholder=\"budynek\"/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridRoomNumber\">\r\n                                    <Form.Label>Nr.Pomieszczenia</Form.Label>\r\n                                    <Form.Control required autoComplete=\"off\"\r\n                                                  type=\"text\" name=\"roomNumber\"\r\n                                                  value={roomNumber} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  placeholder=\"nr.Pomieszczenia\"/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridPersonResponsible\">\r\n                                    <Form.Label>osoba odpowiedzialna</Form.Label>\r\n                                    <Form.Control autoComplete=\"off\"\r\n                                                  type=\"text\" name=\"personResponsible\"\r\n                                                  value={personResponsible} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  placeholder=\"osoba odpowiedzialna\"/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridNumberOfSeta\">\r\n                                    <Form.Label>liczba miejsc</Form.Label>\r\n                                    <Form.Control autoComplete=\"off\"\r\n                                                  type=\"number\" name=\"numberOfSeat\"\r\n                                                  value={numberOfSeat} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  placeholder=\"liczba miejsc\"/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridTypeRoom\">\r\n                                    <Form.Label>Rodzaj pomieszczenia</Form.Label>\r\n                                    <Form.Control autoComplete=\"off\"\r\n                                                  type=\"text\" name=\"typeRoom\"\r\n                                                  value={typeRoom} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  placeholder=\"Rodzaj pomieszczenia\"/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridNumberOfComputer\">\r\n                                    <Form.Label>liczba komputerów</Form.Label>\r\n                                    <Form.Control autoComplete=\"off\"\r\n                                                  type=\"number\" name=\"numberOfComputer\"\r\n                                                  value={numberOfComputer} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  placeholder=\"liczba komputerów\"/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridNumberOfBoard\">\r\n                                    <Form.Label>liczba tablic</Form.Label>\r\n                                    <Form.Control autoComplete=\"off\"\r\n                                                  type=\"number\" name=\"numberOfBoard\"\r\n                                                  value={numberOfBoard} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  placeholder=\"liczba tablic\"/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridNumberOfMultimediaProjectors\">\r\n                                    <Form.Label>projektory multimedialne</Form.Label>\r\n                                    <Form.Control autoComplete=\"off\"\r\n                                                  type=\"number\" name=\"numberOfMultimediaProjectors\"\r\n                                                  value={numberOfMultimediaProjectors} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  placeholder=\"projektory multimedialne\"/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridNumberOfTraditionalProjectors\">\r\n                                    <Form.Label>Projektory tradycyjne</Form.Label>\r\n                                    <Form.Control autoComplete=\"off\"\r\n                                                  type=\"number\" name=\"numberOfTraditionalProjectors\"\r\n                                                  value={numberOfTraditionalProjectors} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  placeholder=\"Projektory tradycyjne\"/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridAuthorizeToBook\">\r\n                                    <Form.Label>Wymagane uprawnienei do rezerwacji</Form.Label>\r\n                                    <Form.Control autoComplete=\"off\"\r\n                                                  type=\"text\" name=\"authorizeToBook\"\r\n                                                  value={authorizeToBook} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  placeholder=\"Wymagane uprawnienei do rezerwacji\"/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridReferenceCode\">\r\n                                    <Form.Label>kod referencyjny</Form.Label>\r\n                                    <Form.Control autoComplete=\"off\"\r\n                                                  type=\"text\" name=\"referenceCode\"\r\n                                                  value={referenceCode} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  placeholder=\"kod referencyjny\"/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridCardCode\">\r\n                                    <Form.Label>kod karty</Form.Label>\r\n                                    <Form.Control autoComplete=\"off\"\r\n                                                  type=\"text\" name=\"cardCode\"\r\n                                                  value={cardCode} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  placeholder=\"kod karty\"/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridResponseUnit\">\r\n                                    <Form.Label>jednostka odpowiedzialna</Form.Label>\r\n                                    <Form.Control autoComplete=\"off\"\r\n                                                  type=\"text\" name=\"responseUnit\"\r\n                                                  value={responseUnit} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  placeholder=\"jednostka odpowiedzialna\"/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridComments\">\r\n                                    <Form.Label>uwagi dodatkowe</Form.Label>\r\n                                    <Form.Control autoComplete=\"off\"\r\n                                                  type=\"text\" name=\"comments\"\r\n                                                  value={comments} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  placeholder=\"uwagi dodatkowe\"/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Card.Body>\r\n                        <Card.Footer style={{\"textAlign\": \"right\"}}>\r\n                            <Button size=\"sm\" variant=\"success\" type=\"submit\">\r\n                                <FontAwesomeIcon icon={faSave}/>{this.state.id ? \" Zmień\" : \" Zapisz\"}\r\n                            </Button>{' '}\r\n                            <Button size=\"sm\" variant=\"info\" type=\"reset\">\r\n                                <FontAwesomeIcon icon={faUndo}/> Wyczyść\r\n                            </Button>{' '}\r\n                            <Button size=\"sm\" variant=\"info\" type=\"button\" onClick={this.recordList.bind()}>\r\n                                <FontAwesomeIcon icon={faList}/>Lista sal\r\n                            </Button>\r\n                        </Card.Footer>\r\n                    </Form>\r\n\r\n                </Card>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Card, Form, Col, Button} from 'react-bootstrap';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faEye, faList} from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios';\r\n\r\nexport default class DetailView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n\r\n    };\r\n\r\n    initialState = {\r\n        id: '',\r\n        nameBuilding: '',\r\n        roomNumber: '',\r\n        personResponsible: '',\r\n        numberOfSeat: '',\r\n        typeRoom: '',\r\n        numberOfComputer: '',\r\n        numberOfBoard: '',\r\n        numberOfMultimediaProjectors: '',\r\n        formGridNumberOfTraditionalProjectors: '',\r\n        authorizeToBook: '',\r\n        referenceCode: '',\r\n        cardCode: '',\r\n        responseUnit: '',\r\n        comments: ''\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        const id = +this.props.match.params.id;\r\n        console.log(id);\r\n        console.log(this.props.match.params);\r\n        if (id) {\r\n            this.findRecordById(id);\r\n        }\r\n    }\r\n\r\n    findRecordById = (id) => {\r\n        axios.get(\" https://creepy-spell-42189.herokuapp.com/record/\" + id)\r\n            .then(response => {\r\n                console.log(response);\r\n                console.log(response.data);\r\n                if (response.data != null) {\r\n                    this.setState({\r\n                        id: response.data.id,\r\n                        nameBuilding: response.data.nameBuilding,\r\n                        roomNumber: response.data.roomNumber,\r\n                        personResponsible: response.data.personResponsible,\r\n                        numberOfSeat: response.data.numberOfSeat,\r\n                        typeRoom: response.data.typeRoom,\r\n                        numberOfComputer: response.data.numberOfComputer,\r\n                        numberOfBoard: response.data.numberOfBoard,\r\n                        numberOfMultimediaProjectors: response.data.numberOfMultimediaProjectors,\r\n                        numberOfTraditionalProjectors: response.data.numberOfTraditionalProjectors,\r\n                        authorizeToBook: response.data.authorizeToBook,\r\n                        referenceCode: response.data.referenceCode,\r\n                        cardCode: response.data.cardCode,\r\n                        responseUnit: response.data.responseUnit,\r\n                        comments: response.data.comments\r\n                    });\r\n\r\n\r\n                }\r\n\r\n            }).catch((error) => {\r\n            console.error(\"Error -\" + error);\r\n\r\n        });\r\n\r\n    }\r\n    recordList = () => {\r\n        return this.props.history.push(\"/list\")\r\n    };\r\n\r\n\r\n    render() {\r\n        const {\r\n            nameBuilding, roomNumber, personResponsible, numberOfSeat, typeRoom,\r\n            numberOfComputer, numberOfBoard, numberOfMultimediaProjectors,\r\n            numberOfTraditionalProjectors, authorizeToBook, referenceCode,\r\n            cardCode, responseUnit, comments\r\n        } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Card className={\"border border-dark bg-dark text-white\"}>\r\n                    <Card.Header><FontAwesomeIcon icon={faEye}/> Szczegóły </Card.Header>\r\n                    <Form id=\"recordFormId\">\r\n                        <Card.Body>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridNameBuilding\">\r\n                                    <Form.Label>Budynek</Form.Label>\r\n                                    <Form.Control readOnly\r\n                                                  type=\"text\" name=\"nameBuilding\"\r\n                                                  value={nameBuilding} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridRoomNumber\">\r\n                                    <Form.Label>Nr.Pomieszczenia</Form.Label>\r\n                                    <Form.Control readOnly\r\n                                                  type=\"text\" name=\"roomNumber\"\r\n                                                  value={roomNumber} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridPersonResponsible\">\r\n                                    <Form.Label>osoba odpowiedzialna</Form.Label>\r\n                                    <Form.Control readOnly\r\n                                                  type=\"text\" name=\"personResponsible\"\r\n                                                  value={personResponsible} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridNumberOfSeta\">\r\n                                    <Form.Label>liczba miejsc</Form.Label>\r\n                                    <Form.Control readOnly\r\n                                                  type=\"number\" name=\"numberOfSeat\"\r\n                                                  value={numberOfSeat} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridTypeRoom\">\r\n                                    <Form.Label>Rodzaj pomieszczenia</Form.Label>\r\n                                    <Form.Control readOnly\r\n                                                  type=\"text\" name=\"typeRoom\"\r\n                                                  value={typeRoom} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridNumberOfComputer\">\r\n                                    <Form.Label>liczba komputerów</Form.Label>\r\n                                    <Form.Control readOnly\r\n                                                  type=\"number\" name=\"numberOfComputer\"\r\n                                                  value={numberOfComputer} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridNumberOfBoard\">\r\n                                    <Form.Label>liczba tablic</Form.Label>\r\n                                    <Form.Control readOnly\r\n                                                  type=\"number\" name=\"numberOfBoard\"\r\n                                                  value={numberOfBoard} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridNumberOfMultimediaProjectors\">\r\n                                    <Form.Label>projektory multimedialne</Form.Label>\r\n                                    <Form.Control readOnly\r\n                                                  type=\"number\" name=\"numberOfMultimediaProjectors\"\r\n                                                  value={numberOfMultimediaProjectors} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridNumberOfTraditionalProjectors\">\r\n                                    <Form.Label>Projektory tradycyjne</Form.Label>\r\n                                    <Form.Control readOnly\r\n                                                  type=\"number\" name=\"numberOfTraditionalProjectors\"\r\n                                                  value={numberOfTraditionalProjectors} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridAuthorizeToBook\">\r\n                                    <Form.Label>Wymagane uprawnienei do rezerwacji</Form.Label>\r\n                                    <Form.Control readOnly\r\n                                                  type=\"text\" name=\"authorizeToBook\"\r\n                                                  value={authorizeToBook} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridReferenceCode\">\r\n                                    <Form.Label>kod referencyjny</Form.Label>\r\n                                    <Form.Control readOnly\r\n                                                  type=\"text\" name=\"referenceCode\"\r\n                                                  value={referenceCode} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridCardCode\">\r\n                                    <Form.Label>kod karty</Form.Label>\r\n                                    <Form.Control readOnly\r\n                                                  type=\"text\" name=\"cardCode\"\r\n                                                  value={cardCode} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridResponseUnit\">\r\n                                    <Form.Label>jednostka odpowiedzialna</Form.Label>\r\n                                    <Form.Control readOnly\r\n                                                  type=\"text\" name=\"responseUnit\"\r\n                                                  value={responseUnit} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridComments\">\r\n                                    <Form.Label>uwagi dodatkowe</Form.Label>\r\n                                    <Form.Control readOnly\r\n                                                  type=\"text\" name=\"comments\"\r\n                                                  value={comments} onChange={this.recordChange}\r\n                                                  className={\"bg-dark text-white\"}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Card.Body>\r\n                        <Card.Footer style={{\"textAlign\": \"right\"}}>\r\n                            <Button size=\"sm\" variant=\"info\" type=\"button\" onClick={this.recordList.bind()}>\r\n                                <FontAwesomeIcon icon={faList}/>Lista sal\r\n                            </Button>\r\n                        </Card.Footer>\r\n                    </Form>\r\n\r\n                </Card>\r\n            </div>\r\n\r\n\r\n        )\r\n\r\n\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Table, Button, ButtonGroup} from 'react-bootstrap';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faList, faEdit, faTrash, faEye} from '@fortawesome/free-solid-svg-icons'\r\nimport MyToast from './MyToast';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class RecordList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            records: []\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.findAllRecords();\r\n    }\r\n\r\n    findAllRecords() {\r\n        axios.get(\"https://creepy-spell-42189.herokuapp.com/record/list\")\r\n            .then(response => response.data)\r\n            .then((data) => {\r\n                this.setState({records: data});\r\n            });\r\n\r\n    };\r\n\r\n    deleteRecord = (recordId) => {\r\n        axios.delete(\" https://creepy-spell-42189.herokuapp.com/record/delete/\" + recordId)\r\n            .then(response => {\r\n                if (response.data != null) {\r\n                    this.setState({\"show\": true});\r\n                    setTimeout(() => this.setState({\"show\": false}), 3000)\r\n                    this.setState({\r\n                        records: this.state.records.filter(record => record.id !== recordId)\r\n                    });\r\n                } else {\r\n                    this.setState({\"show\": false});\r\n                }\r\n            });\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <div style={{\"display\": this.state.show ? \"block\" : \"none\"}}>\r\n                    <MyToast show={this.state.show} message={\"Sala została usunięta.\"} type={\"danger\"}/>\r\n                </div>\r\n                <Table float left striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                    <tr align=\"left\">\r\n                        <td colSpan=\"12\"><FontAwesomeIcon icon={faList}/> Lista sal</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Budynek</th>\r\n                        <th>Numer pomieszczenia</th>\r\n                        <th>Osoba odpowiedzialna</th>\r\n                        <th>Liczba miejsc</th>\r\n                        <th>Rodzaj pomieszczenia</th>\r\n                        <th>Liczba komputerów</th>\r\n                        <th>Liczba tablic</th>\r\n                        <th>Projektory multimedialne</th>\r\n                        <th>Projektory tradycyjne</th>\r\n                        <th>Akcja</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.records.length === 0 ?\r\n                        <tr align=\"center\">\r\n                            <td colSpan=\"12\">Ewidencja jest pusta</td>\r\n                        </tr> :\r\n                        this.state.records.map((record) => (\r\n                            <tr key={record.id}>\r\n                                <td>{record.nameBuilding}</td>\r\n                                <td>{record.roomNumber}</td>\r\n                                <td>{record.personResponsible}</td>\r\n                                <td>{record.numberOfSeat}</td>\r\n                                <td>{record.typeRoom}</td>\r\n                                <td>{record.numberOfComputer}</td>\r\n                                <td>{record.numberOfBoard}</td>\r\n                                <td>{record.numberOfMultimediaProjectors}</td>\r\n                                <td>{record.numberOfTraditionalProjectors}</td>\r\n                                <td>\r\n                                    <ButtonGroup>\r\n                                        <Link to={\"edit/\" + record.id}\r\n                                              className=\"btn btn-sm btn-outline-primary\"><FontAwesomeIcon\r\n                                            icon={faEdit}/></Link>\r\n                                        <Link to={\"details/\" + record.id}\r\n                                              className=\"btn btn-sm btn-outline-info\"><FontAwesomeIcon\r\n                                            icon={faEye}/></Link>{' '}\r\n\r\n                                        <Button size=\"sm\" variant=\"outline-danger\"\r\n                                                onClick={this.deleteRecord.bind(this, record.id)}><FontAwesomeIcon\r\n                                            icon={faTrash}/></Button>\r\n                                    </ButtonGroup>\r\n                                </td>\r\n\r\n                            </tr>\r\n\r\n                        ))\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Navbar, Container, Col } from 'react-bootstrap';\r\n\r\n\r\nclass Footer extends React.Component{\r\n    render(){\r\n        let fullYear = new Date().getFullYear();\r\n        return (\r\n            <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                   <Col lg={12} className=\"text-center text-muted\">\r\n                        <div>{fullYear}-{fullYear + 1}, All right reserved by Politechnika Warszawska</div>\r\n\r\n                    </Col>\r\n                </Container>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport NavigationBar from './components/NavigationBar';\nimport Welcome from './components/Welcome';\nimport Record from './components/Record';\nimport DetailView from './components/DetailView';\nimport RecordList from './components/RecordList';\nimport Footer from './components/Footer';\nimport {Container, Row,  Col } from 'react-bootstrap';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\n\n\nfunction App() {\n  const marginTop = {\n    marginTop : \"10px\"\n  }\n  return (\n    <Router>\n      <NavigationBar/>\n        <Container>\n          <Row>\n            <Col lg = {12} style = {marginTop}>\n              <Switch>\n                  <Route path=\"/\" exact component ={Welcome}/>\n                  <Route path=\"/add\" exact component ={Record}/>\n                  <Route path=\"/edit/:id\" exact component ={Record}/>\n                  <Route path=\"/details/:id\" exact component ={DetailView}/>\n                  <Route path=\"/list\" exact component ={RecordList}/>\n              </Switch>            \n            </Col>\n          </Row>\n        </Container>\n        <Footer/>\n        </Router>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}